(defpoll clock_time :interval "1s" "date '+%R:%S %b %d, %Y'")
(defpoll volume_percent :interval "1s" "@scriptdir@/sys_info.sh --vol")
(defpoll battery_percent :interval "1s" "@scriptdir@/battery.sh charge")
(defpoll battery_status :interval "1s" "@scriptdir@/battery.sh status")
(defpoll battery_icon :interval "1s" "@scriptdir@/battery.sh icon")


(defvar volum false)
(defvar tray false)
; ;; System
; (defpoll cpu :interval "1s" "@scriptdir@/sys_info.sh --cpu")
; (defpoll mem :interval "1s" "@scriptdir@/sys_info.sh --mem")
; (defpoll brightness :interval "1s" "@scriptdir@/sys_info.sh --bright")

;;WiFi
; (defpoll color_wlan :interval "1m" "@scriptdir@/wifi.sh --COL")
; (defpoll ssid :interval "1m" "@scriptdir@/wifi.sh --ESSID")
; (defpoll icon_wlan :interval "1m" "@scriptdir@/wifi.sh --ICON")



;; Window
(defwindow main1
  :monitor 1
  :exclusive true
  :stacking "fg" 
  :geometry (geometry 
    :width "100%" 
    :height "40px"
    :anchor "top center")
  (bar :monitor 1)
)

(defwindow main0
  :monitor 0
  :exclusive true
  :stacking "fg" 
  :geometry (geometry 
    :width "1436px" 
    :height "40px"
    :anchor "top center")
  (bar :monitor 0)
)



(defwidget bar [monitor]
  (centerbox
    :class "bar"
    :orientation "h"
    (left :monitor {monitor})
    (center)
    (right)
  )
)


(defwidget left [monitor]
  (box :class "left_modules" 
      :space-evenly false
      :orientation "h"
      :halign "start"
    (system)
    (sep)
    (volum)  
    (sep)
    (workspaces :monitor {monitor})
  )
)


(defwidget center []
  (box :class "center_modules"
      :space-evenly false
      :orientation "h"
      :halign "center"
    (appname)
  )
)

(defwidget right []
  (box :class "right_modules"
    :space-evenly false
    :spacing 10
    :orientation "h"
    :halign "end"
    (clock)
    (sep)
    (system_tray)
    (sep)
    (battery)
  )
)

(defwidget sep []
  (box
    :valign "center"
    (label
      :class "separ"
      :valign "center"
      :text "|"
    )
  )
)

;;(deflisten workspace "@scriptdir@/workspaces.sh")
;;(defwidget workspaces []
;;  (literal :content workspace)
;;)

(deflisten workspaces "hyprland-workspaces -w 9 _")

(defwidget workspaces [monitor]
  (eventbox :onscroll "hyprctl dispatch workspace `echo {} | sed 's/up/+/\' | sed 's/down/-/'`1"
    (box :class "workspaces"
      (for i in {workspaces[monitor].workspaces}
        (button
          :onclick "hyprctl dispatch workspace ${i.id}"
          :class "${i.class}"
          "${i.name}")))))

; (defwidget bar0 []
;   (box
;     (workspaceWidget :monitor 0)
;   )
; )

; (defwidget bar1 []
;   (box
;     (workspaceWidget :monitor 1)
;   )
; )

(deflisten appname_ "@scriptdir@/currentapp.sh")
(defwidget appname []
  (literal :content appname_)
)

(defwidget clock []
  (eventbox :class "clock_container" 
       :onclick "@scriptdir@/pop.sh info"
    (label 
      :class "clock"
      :tooltip {clock_time}
      :limit-width 22
      :text {clock_time}
      :wrap false
    )
  )
)

(defwidget system []
  (eventbox 
    :onclick "@scriptdir@/pop.sh system"
    (image
      :class "system_icon"
      :path "./nixos-icon.svg"
      :image-width 50
      :image-height 50
    )
  )
)

(defwidget battery []
  (box :class "battery_container"
    (circular-progress
      :value {battery_percent}
      :class "battery"
      :thickness 5
      (label :text "${battery_icon}"
        :class "battery_icon"
        :tooltip "${battery_percent}% - ${battery_status}"
        :limit-width 2
        :wrap false
      )
    )
  )
)

(defwidget volum []
  (eventbox 
    :onhover "eww update volum=true"
    :onhoverlost "eww update volum=false"
    (box
      :orientation "h"
      :space-evenly "false"
      (label
        :class "icon"
        :text "    "
        :wrap false
      )
      (revealer
        :transition "slideright"
        :reveal {volum}
        :duration "400ms"
        (progress 
          :class "volbar"
          :value {volume_percent}
          :orientation "h"
          :flipped false
          :tooltip "Volume: ${volume_percent}%"
          :max 101
          :min 0
          :onchange "amixer -D pulse sset Master {}%"
        )
      )
    )
  )
)

(defwidget system_tray []
  (eventbox 
    :class "system_tray_container"
    :onhover "eww update tray=true"
    :onhoverlost "eww update tray=false"
    (box
      :orientation "h"
      :space-evenly "false"
      (revealer
        :transition "slideleft"
        :reveal {tray}
        :duration "400ms"
        (box
          :orientation "h"
          (systray
            :class "tray"
            :spacing 9
            :orientation "h"
            :icon-size 25
          )
        )
      )
      (label
        :class "icon"
        :text "󱊖  "
        :wrap false
      )
    )
  )
)